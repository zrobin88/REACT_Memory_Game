{"ast":null,"code":"import _classCallCheck from \"/Users/zacharyrobin/Desktop/Code/clicky/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zacharyrobin/Desktop/Code/clicky/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zacharyrobin/Desktop/Code/clicky/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zacharyrobin/Desktop/Code/clicky/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zacharyrobin/Desktop/Code/clicky/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zacharyrobin/Desktop/Code/clicky/src/App.js\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.clicked = function (id) {\n      _this.setState({\n        friends: _this.randomShuffle(_this.state.friends)\n      });\n\n      if (_this.arr[id]) {\n        _this.setState({\n          score: 0\n        });\n\n        _this.arr = [];\n\n        for (var i = 0; i < _this.state.friends.length; i++) {\n          _this.arr.push(false);\n        }\n      } else {\n        _this.arr[id] = true;\n\n        _this.setState({\n          score: _this.state.score + 1\n        });\n\n        if (_this.state.score > _this.state.highscore) {\n          _this.setState({\n            highscore: _this.state.score\n          });\n        }\n      }\n    };\n\n    _this.randomShuffle = function (array) {\n      var i = array.length - 1;\n\n      for (; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n\n      return array;\n    };\n\n    _this.removeFriend = function (id) {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      var friends = _this.state.friends.filter(function (friend) {\n        return friend.id !== id;\n      }); // Set this.state.friends equal to the new friends array\n\n\n      _this.setState({\n        friends: friends\n      });\n    };\n\n    _this.state = {\n      friends: friends,\n      score: 0,\n      highscore: 10\n    };\n    _this.arr = [];\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Friends List\"), this.state.friends.map(function (friend) {\n        return React.createElement(ImageCard, {\n          removeFriend: _this2.removeFriend,\n          id: friend.id,\n          key: friend.id,\n          name: friend.name,\n          image: friend.image,\n          occupation: friend.occupation,\n          location: friend.location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/zacharyrobin/Desktop/Code/clicky/src/App.js"],"names":["React","Component","ImageCard","Wrapper","Title","friends","App","props","clicked","id","setState","randomShuffle","state","arr","score","i","length","push","highscore","array","j","Math","floor","random","temp","removeFriend","filter","friend","map","name","image","occupation","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ImageCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      friends,\n      score: 0,\n      highscore: 10,\n    }\n\n    this.arr = [];\n\n  }\n  \n\n  clicked = (id) => {\n    this.setState({ friends: this.randomShuffle(this.state.friends) });\n\n    if (this.arr[id]) {\n      this.setState({ score: 0 });\n\n      this.arr = [];\n\n      for (let i = 0; i < this.state.friends.length; i++) {\n        this.arr.push(false);\n\n      }\n\n\n    } else {\n      this.arr[id] = true;\n\n      this.setState({ score: this.state.score + 1 });\n\n      if(this.state.score > this.state.highscore){\n        this.setState({ highscore: this.state.score });\n      }\n    }\n\n  };\n\n\n\n\n  randomShuffle = array => {\n    let i = array.length - 1;\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n\n\n\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n   \n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        \n        {this.state.friends.map(friend => (\n          <ImageCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}